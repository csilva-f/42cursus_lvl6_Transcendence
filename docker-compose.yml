services:
  backend-api:
    container_name: backend-api
    build: ./backend-api
    volumes:
      - ./backend-api/code:/code:rw
    networks:
      - backend
      - frontend
    ports:
      - "5555:8000"
    init: true
    restart: on-failure
    env_file:
      - ./backend-api/.env
    depends_on:
      - backend

  auth-api:
    container_name: auth-api
    build: ./auth-api
    volumes:
      - ./auth-api/code:/code:rw
    networks:
      - backend
      - frontend
    ports:
      - "5556:8000"
    init: true
    restart: on-failure
    env_file:
      - ./auth-api/.env
    depends_on:
      - auth

  backend:
    container_name: backend
    build: ./backend
    volumes:
      - ./backend/code:/code:rw
    networks:
      - backend
    ports:
      - "9000:8002"
    init: true
    restart: on-failure
    env_file:
      - ./backend/.env
    depends_on:
      - backend-db

  backend-db:
    container_name: backend-db
    build: ./backend-db
    env_file:
      - ./backend-db/.env
    volumes:
      - ./backend-db/data:/var/lib/postgresql/data:rw
    networks:
      - backend
  auth:
    container_name: auth
    build: ./auth
    volumes:
      - ./auth/code:/code:rw
    ports:
      - "9001:8000"
    networks:
      - backend
    init: true
    restart: on-failure
    env_file:
      - ./auth/.env
    depends_on:
      - auth-db

  auth-db:
    container_name: auth-db
    build: ./auth-db
    env_file:
      - ./auth-db/.env
    volumes:
      - ./auth-db/data:/var/lib/postgresql/data:rw
    networks:
      - backend

  email:
    container_name: email
    build: ./email
    volumes:
      - ./email/code:/code:rwx
    ports:
      - "9005:8000"
    networks:
      - backend
    init: true
    restart: on-failure
    env_file:
      - ./email/.env
    depends_on:
      - email-db

  email-db:
    container_name: email-db
    build: ./email-db
    env_file:
      - ./email-db/.env
    volumes:
      - ./email-db/data:/var/lib/postgresql/data:rw
    networks:
      - backend



  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - ./frontend:/frontend:rw
    networks:
      - frontend
    ports:
      - "8000:443"
    init: true
    restart: on-failure
    env_file:
      - ./nginx/.env
    depends_on:
      - backend-api

networks:
  backend:
    name: backend
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
  frontend:
    name: frontend
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/24
